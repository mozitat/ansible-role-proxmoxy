---

## manage/create Storage of type nfs, dir and zfspool

# Limitation: Always or never sets values for existing storage. (depends on variable)
# pvesm Bug ? currently pvesm does not list disabled storage 

- name: Storage > get storage list before remove
  command: pvesm status
  register: __proxmoxy_storage_status
  changed_when: false

- name: Storage > remove storages
  shell: >
    pvesm remove {{ item }}
  with_items: "{{ proxmoxy__storage_remove }}"
  # not sure if \n in string from above is evaluated
  when: >
    item and __proxmoxy_storage_status.stdout | regex_search( '[\nn]' ~ item ~ '\s+')

- name: Storage > get storage list after remove
  command: pvesm status
  register: __proxmoxy_storage_status
  changed_when: false

- name: Debug XXX print value of xxx
  debug: var=__proxmoxy_storage_status

- name: Storage > create storage
  shell: >
    pvesm add {{ item.type }} {{ item.id }}
    {#- nfs -#}
    {{ ' -server "' ~ item.server ~ '"' if item.server is defined else '' }}
    {{ ' -export "' ~ item.export ~ '"' if item.export is defined else '' }}
    {{ ' -path "' ~ item.path ~ '"' if item.path is defined else '' }}
    {{ ' -options "' ~ item.options ~ '"' if item.options is defined else '' }}
    {#- zfs (no maxfiles) -#}
    {{ ' -pool "' ~ item.pool ~ '"' if item.pool is defined else '' }}
    {{ ' -blocksize "' ~ item.blocksize ~ '"' if item.blocksize|d(None) else '' }}
    {{ ' -sparse "' ~ item.sparse|int ~ '"' if item.sparse is defined else '' }}
    {#- dir (uses path too) -#}
    {{ ' -shared "' ~ item.shared|int ~ '"' if item.shared is defined else '' }}
    {#- common -#}
    {{ ' -maxfiles "' ~ item.maxfiles ~ '"' if item.maxfiles|d(None) else '' }}
    {{ ' -nodes "' ~ item.nodes|d(proxmoxy__storage_nodes)|sort|join(',') ~ '"' if item.nodes|d(proxmoxy__storage_nodes) else '' }}
    {{ ' -content "' ~ item.content|d(proxmoxy__storage_content)|sort|join(',') ~ '"' }}
    {{ ' -disable "' ~ item.disable|d(0) ~ '"' }}
  with_items: "{{ proxmoxy__storage }}"
  when: >
    not ansible_check_mode and item and not __proxmoxy_storage_status.stdout | 
    regex_search("{0}\s+{1}\s".format(item.id|default(omit), item.type|default(omit)))

  # how create on already defined would not fail the playbook.
  # register: __result
  # failed_when: "__result.rc != 0 and 'already defined' not in __result.stderr"
  # changed_when: "__result.rc == 0"

- name: Storage > set storage options if {{ proxmoxy__storage_changes }}
  shell: >
    pvesm set {{ item.id }}
    {#- nfs -#}
    {{ ' -options "' ~ item.options ~ '"' if item.options is defined else '' }}
    {#- zfs (no maxfiles) -#}
    {{ ' -blocksize "' ~ item.blocksize ~ '"' if item.blocksize|d(None) else '' }}
    {{ ' -sparse "' ~ item.sparse|int ~ '"' if item.sparse is defined else '' }}
    {#- dir (uses path too) -#}
    {{ ' -shared "' ~ item.shared|int ~ '"' if item.shared is defined else '' }}
    {#- common -#}
    {{ ' -maxfiles "' ~ item.maxfiles ~ '"' if item.maxfiles|d(None) else '' }}
    {{ ' -nodes "' ~ item.nodes|d(proxmoxy__storage_nodes)|sort|join(',') ~ '"' if item.nodes|d(proxmoxy__storage_nodes) else '' }}
    {{ ' -content "' ~ item.content|d(proxmoxy__storage_content)|sort|join(',') ~ '"' }}
    {{ ' -disable "' ~ item.disable|d(0) ~ '"' }}
  with_items: "{{ proxmoxy__storage }}"
  when: >
    item and proxmoxy__storage_changes and 
    __proxmoxy_storage_status.stdout | regex_search( item.id ~ '\s+' ~ item.type )


# Alternative idea from: https://github.com/reminec/ansible-role-proxmox/blob/master/tasks/storage.yml
# only write a pvesm.yml file and include it with a loop
# - name: storage > Setup storages (Only LVM)
#   include: pvesm.yml
#   with_items: '{{ proxmox_storages }}'
#   when: item.type == 'lvm'


# Idea for implementation: get config for single config and call set only if changes.
## TBD set options in local_fact like debops?
# sed for getting 1 storage config: sed -n '/^\w\+: tank$/,/^$/p' storage.cfg | grep "^\W"
# Problem: How to get into fact dict {id: xxx, config: "xxx"}? Would have to workaround with additional command calls?
